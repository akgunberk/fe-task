{"version":3,"file":"static/webpack/static/development/pages/index.js.c489c2d9df662fe0b16c.hot-update.js","sources":["webpack:///./pages/movie.js"],"sourcesContent":["import React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport 'isomorphic-fetch';\nimport {Transition, Icon ,Button} from 'semantic-ui-react';\nimport Duration from './movieDuration';\nimport Rate from './progress';\n\nclass Movie extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = { \n            show:false,\n            sign:'plus',\n            click:0,\n            details:null,\n            id:this.props.data.id,\n            barStyle:{width:\"326px\", margin:'35px auto 47px'},\n            visible:true\n         }\n\n         this.handleClick = this.handleClick.bind(this)\n         this.buttonChange = this.buttonChange.bind(this)\n         this.buttonChangeColor = this.buttonChangeColor.bind(this)\n    }\n\n    static async getInitialProps(){\n       // fetching movie poster\n\n        const poster = await fetch(this.props.data.posterurl).then(\n            res => res.blob()\n            ).then(\n            blob => URL.createObjectURL(blob)).catch(error =>{error} )\n        \n        return {posterurl:poster}   \n    }\n\n    componentDidMount(props){\n       // fetching details of the movie\n       var details = require(`../data/${this.props.data.id}.json`)\n       this.setState({details:details})\n\n    }\n\n    buttonChangeColor = (color) =>  document.getElementById(this.props.data.id + '_button_bg').style.backgroundColor = color\n\n\n    buttonChange = (prop) => {\n        if(prop == 0) {\n            this.setState({click:1,sign:'plus'})\n            const watchlistButton = <p className='text_button'>+ ADD TO WATCHLIST</p>\n            ReactDOM.render(watchlistButton,document.getElementById(this.props.data.id + '_button'));\n            document.getElementById(this.state.id).classList = 'movie_clicked';\n\n        }if(prop==1){\n            this.setState({click:2,sign:'minus'})\n            const watchlistButton = <p className='text_button' style={{letterSpacing:'0px'}}>- REMOVE FROM WATCHLIST</p>\n            ReactDOM.render(watchlistButton,document.getElementById(this.props.data.id + '_button'));\n\n        }else{\n            this.setState({click:1,sign:'plus'})\n            const watchlistButton = <p className='text_button'>+ ADD TO WATCHLIST</p>\n            ReactDOM.render(watchlistButton,document.getElementById(this.props.data.id + '_button'));\n            document.getElementById(this.state.id).classList = 'movie_clicked';\n\n\n        }\n    }\n\n    handleClick = (e) => {\n\n        //change button style\n        this.buttonChange(this.state.click)\n\n        //update state\n        this.setState((prevState) => ({\n            ...prevState, \n            visible: !prevState.visible,\n            show:true,\n            barStyle:\n                {\n                width:'212px',\n                position:'absolute',\n                float:\"right\",\n                right:'24px',\n                top:'14px'\n                } \n            })\n        )\n\n        //change stylesheet\n        document.getElementById(this.state.id).classList = 'movie_clicked';\n\n        \n\n    }\n        \n    render() { \n//        <Icon style={{position:'relative',right:'-32px',bottom:'-32px'}}  size='large' circular name={this.state.sign} inverted color='orange'/>\n\n\n        //tiny plus button changes color and affect addButton on click\n        const plusButton = (this.state.show == true) ? \n            <Button onClick={this.handleClick} style={{ position:'absolute',\n                                                        zIndex:\"999\",\n                                                        backgroundColor:this.state.click == 2 ? '#f24545': '#ff6000',borderRadius:'50%', \n                                                        borderColor:'none',\n                                                        bottom:'-22px',\n                                                        right:'-22px',\n                                                        width:'44px',\n                                                        height:'44px'}\n                                                    } \n                                                        circular color='black' size='large' icon={this.state.sign}>\n            </Button> : null\n\n\n        //movie details\n        const movieDetails = (this.state.show == true) ?\n\n            <div className = 'content_movie'>\n\n                <div id={this.props.data.id + '_content'} className='content_movie_storyline'> {this.state.details.storyline} </div>\n\n                <hr className='content_movie_shapeline'/>\n\n                <div className='content_movie_summary'>\n\n                    <div className='content_movie_summary_definition'>\n                                      \n                        {   (this.state.details.directors.length < 3) ? \n                                <p> <span className='content_movie_summary_header'> Director: </span> {this.state.details.directors.slice(0,3).join(', ')} </p>   : \n                                <p> <span className='content_movie_summary_header'> Director: </span> {this.state.details.directors.slice(0,2).join(', ')} <span> {this.state.details.directors.length - 2} | more credits >>  </span></p> \n                        }\n\n                        {   (this.state.details.writers.length < 3) ? \n                                <p> <span style={{marginRight:'2px'}} className='content_movie_summary_header'> Writers: </span> {this.state.details.writers.slice(0,3).join(', ')} </p>   : \n                                <p> <span className='content_movie_summary_header'> Writers: </span> {this.state.details.writers.slice(0,2).join(', ')} <span> {this.state.details.writers.length - 2} | more credits >>  </span></p> \n                        }\n\n                        {   (this.state.details.actors.length <= 3) ? \n                                <p> <span style={{marginRight:'18px'}} className='content_movie_summary_header'> Stars: </span> {this.state.details.actors.slice(0,3).join(', ')} </p>   : \n                                <p> <span className='content_movie_summary_header'> Stars: </span> {this.state.details.actors.slice(0,3).join(', ')} <span> | See full cast &amp; crew >>  </span></p> \n                        }\n                                \n                    </div>\n\n                </div>\n\n            </div> : null\n\n\n        return (\n\n            <div id={this.props.data.id} className='movie'>\n\n                <div className='img_container' id={this.props.data.id + \"_img\"}>\n\n                    <img className='img_poster' alt={this.props.data.originalTitle + ' Poster'} src={this.props.data.posterurl}/>\n\n                    {plusButton} \n\n                    <div className='gradient'></div>\n\n                    <div className='gradient_white'></div>\n\n                </div>\n\n                <div className='bg_content'>\n\n                    <div className='name_movie'>{this.props.data.originalTitle}</div>\n\n                    <div className='info_movie'>{this.props.data.year} · {this.props.data.genres.join(', ')} · <Duration min={this.props.data.duration}/>  </div>\n\n                    <div className='rating'>\n                        { (`${this.props.data.imdbRating}`).length == 1 ? this.props.data.imdbRating + '.0' : this.props.data.imdbRating }    \n                        <span className='text-style-1'>/10</span>\n                    </div>\n\n                    <Rate id = {this.props.data.id + \"_rate\"} percent={this.props.data.imdbRating*10} barStyle = {this.state.barStyle} />\n\n                    <Transition visible={this.state.show} animation={'scale' }duration={850}>\n                        {movieDetails}\n\n                    </Transition>\n                    \n                    <Transition\n                        animation= {'bounce'}\n                        duration= {200}\n                        visible = {this.state.visible}\n                    >\n\n                        <button style= {this.state.click == 2 ? {backgroundColor:'#f24545'} : {backgroundColor:'#ff6000'} } className='bg_button' onClick={this.handleClick}>\n\n                            <p id={this.props.data.id + \"_button\"} className=\"text_button\"> MOVIE DETAILS </p>\n\n                        </button>\n\n                    </Transition>\n\n                </div>\n\n            </div>\n        )\n    }\n}\n \nexport default Movie;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAmCA;AAAA;AACA;AApCA;AAuCA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AADA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAGA;AACA;AACA;AA3DA;AA8DA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AALA;AAAA;AACA;AACA;AAcA;AAIA;AACA;AArFA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAPA;AAUA;AACA;AACA;AAdA;AAeA;AACA;;;AAYA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;;;AAuDA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AAAA;AAAA;AAAA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAaA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;;;;;;;;;;AA9KA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;;AAJA;AAKA;AAAA;AAAA;AACA;;;;;;;;;;;AA5BA;AACA;AAsMA;;;;A","sourceRoot":""}