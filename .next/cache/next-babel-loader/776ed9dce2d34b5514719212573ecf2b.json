{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/akgunberk/Desktop/DEV/armut/pages/movie.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport 'isomorphic-fetch';\n\nvar Movie =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Movie, _Component);\n\n  function Movie(props) {\n    var _this;\n\n    _classCallCheck(this, Movie);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Movie).call(this, props));\n    _this.state = {\n      show: true\n    };\n    return _this;\n  }\n\n  _createClass(Movie, [{\n    key: \"render\",\n    value: function render() {\n      function loadImage(url) {\n        var img;\n        return _regeneratorRuntime.async(function loadImage$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _regeneratorRuntime.awrap(fetch(url));\n\n              case 2:\n                img = _context.sent;\n                return _context.abrupt(\"return\", img);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        });\n      }\n\n      var poster = loadImage(this.props.posterurl);\n      return __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"Berk\", poster.blob);\n    }\n  }]);\n\n  return Movie;\n}(Component);\n\nexport default Movie;","map":{"version":3,"sources":["/Users/akgunberk/Desktop/DEV/armut/pages/movie.js"],"names":["React","Component","Movie","props","state","show","loadImage","url","fetch","img","poster","posterurl","blob"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,kBAAP;;IAEMC,K;;;;;AACF,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,+EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAC;AADI,KAAb;AAFe;AAKlB;;;;6BAIQ;AAEL,eAAeC,SAAf,CAAyBC,GAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDACsBC,KAAK,CAACD,GAAD,CAD3B;;AAAA;AACUE,gBAAAA,GADV;AAAA,iDAGWA,GAHX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAMA,UAAMC,MAAM,GAAGJ,SAAS,CAAC,KAAKH,KAAL,CAAWQ,SAAZ,CAAxB;AAEA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAEKD,MAAM,CAACE,IAFZ,CADJ;AAMH;;;;EA1BeX,S;;AA6BpB,eAAeC,KAAf","sourcesContent":["import React, {Component} from 'react';\nimport 'isomorphic-fetch';\n\nclass Movie extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n            show:true,\n         }\n    }\n\n    \n\n    render() { \n\n        async function loadImage(url) {\n            const img = await fetch(url)\n            //return <img src={poster.blob}></img>\n            return img\n            \n        }\n        const poster = loadImage(this.props.posterurl)\n        \n        return (\n            <div>\n                Berk\n                {poster.blob}\n            </div>\n        )\n    }\n}\n \nexport default Movie;"]},"metadata":{},"sourceType":"module"}