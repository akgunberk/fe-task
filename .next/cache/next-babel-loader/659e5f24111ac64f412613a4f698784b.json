{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/akgunberk/Desktop/DEV/armut/pages/movie.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport 'isomorphic-fetch';\n\nvar Movie =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Movie, _Component);\n\n  function Movie(props) {\n    var _this;\n\n    _classCallCheck(this, Movie);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Movie).call(this, props));\n    _this.state = {\n      show: true,\n      resim: null,\n      url: _this.props.posterurl\n    };\n    return _this;\n  }\n\n  _createClass(Movie, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var poster;\n      return _regeneratorRuntime.async(function componentDidMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log(this.props.url);\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(fetch(this.props.url).then(function (res) {\n                return res.blob();\n              }).then(function (blob) {\n                return URL.createObjectURL(blob);\n              }));\n\n            case 3:\n              poster = _context.sent;\n              this.setState({\n                resim: poster\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // async function loadImage(url) {\n      //     const poster = await fetch(url).then(res => res.blob())\n      //     //return <img src={poster.blob}></img>\n      // }\n      //loadImage('https://images-na.ssl-images-amazon.com/images/M/MV5BMTMxNTMwODM0NF5BMl5BanBnXkFtZTcwODAyMTk2Mw@@._V1_SY500_CR0,0,337,500_AL_.jpg')\n      return __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, __jsx(\"img\", {\n        className: \"img_container\",\n        src: this.state.resim,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Movie;\n}(Component);\n\nexport default Movie;","map":{"version":3,"sources":["/Users/akgunberk/Desktop/DEV/armut/pages/movie.js"],"names":["React","Component","Movie","props","state","show","resim","url","posterurl","console","log","fetch","then","res","blob","URL","createObjectURL","poster","setState"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,kBAAP;;IAEMC,K;;;;;AACF,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,+EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAC,IADI;AAETC,MAAAA,KAAK,EAAC,IAFG;AAGTC,MAAAA,GAAG,EAAG,MAAKJ,KAAL,CAAWK;AAHR,KAAb;AAFe;AAOlB;;;;;;;;;;AAGGC,cAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,KAAL,CAAWI,GAAvB;;+CAEqBI,KAAK,CAAC,KAAKR,KAAL,CAAWI,GAAZ,CAAL,CAAsBK,IAAtB,CACjB,UAAAC,GAAG;AAAA,uBAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,eADc,EAEfF,IAFe,CAGjB,UAAAE,IAAI;AAAA,uBAAIC,GAAG,CAACC,eAAJ,CAAoBF,IAApB,CAAJ;AAAA,eAHa,C;;;AAAfG,cAAAA,M;AAMN,mBAAKC,QAAL,CAAc;AAACZ,gBAAAA,KAAK,EAACW;AAAP,eAAd;;;;;;;;;;;6BAKK;AAEL;AACA;AACA;AAEA;AAGA;AAEA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,eAAf;AAA+B,QAAA,GAAG,EAAE,KAAKb,KAAL,CAAWE,KAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ;AAKH;;;;EAxCeL,S;;AA2CpB,eAAeC,KAAf","sourcesContent":["import React, {Component} from 'react';\nimport 'isomorphic-fetch';\n\nclass Movie extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n            show:true,\n            resim:null,\n            url : this.props.posterurl\n         }\n    }\n\n    async componentDidMount(){\n        console.log(this.props.url)\n\n        const poster = await fetch(this.props.url).then(\n            res => res.blob()\n            ).then(\n            blob => URL.createObjectURL(blob)\n        )\n        \n        this.setState({resim:poster})        \n    }\n\n    \n\n    render() { \n\n        // async function loadImage(url) {\n        //     const poster = await fetch(url).then(res => res.blob())\n        //     //return <img src={poster.blob}></img>\n            \n        // }\n        \n        \n        //loadImage('https://images-na.ssl-images-amazon.com/images/M/MV5BMTMxNTMwODM0NF5BMl5BanBnXkFtZTcwODAyMTk2Mw@@._V1_SY500_CR0,0,337,500_AL_.jpg')\n\n        return (\n            <div>\n                <img className='img_container' src={this.state.resim} />\n            </div>\n        )\n    }\n}\n \nexport default Movie;"]},"metadata":{},"sourceType":"module"}