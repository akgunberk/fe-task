{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport 'isomorphic-fetch';\nimport { Transition, Icon, Button } from 'semantic-ui-react';\nimport Duration from './movieDuration';\nimport Rate from './progress';\n\nclass Movie extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"buttonChangeColor\", color => document.getElementById(this.props.data.id + '_button_bg').style.backgroundColor = color);\n\n    _defineProperty(this, \"buttonChange\", prop => {\n      if (prop == 0) {\n        this.setState({\n          click: 1,\n          sign: 'plus'\n        });\n\n        const watchlistButton = __jsx(\"p\", {\n          className: \"text_button\"\n        }, \"+ ADD TO WATCHLIST\");\n\n        ReactDOM.render(watchlistButton, document.getElementById(this.props.data.id + '_button'));\n        document.getElementById(this.state.id).classList = 'movie_clicked';\n      }\n\n      if (prop == 1) {\n        this.setState({\n          click: 2,\n          sign: 'minus'\n        });\n\n        const watchlistButton = __jsx(\"p\", {\n          className: \"text_button\",\n          style: {\n            letterSpacing: '0px'\n          }\n        }, \"- REMOVE FROM WATCHLIST\");\n\n        ReactDOM.render(watchlistButton, document.getElementById(this.props.data.id + '_button'));\n      } else {\n        this.setState({\n          click: 1,\n          sign: 'plus'\n        });\n\n        const watchlistButton = __jsx(\"p\", {\n          className: \"text_button\"\n        }, \"+ ADD TO WATCHLIST\");\n\n        ReactDOM.render(watchlistButton, document.getElementById(this.props.data.id + '_button'));\n        document.getElementById(this.state.id).classList = 'movie_clicked';\n      }\n    });\n\n    _defineProperty(this, \"handleClick\", e => {\n      //change button style\n      this.buttonChange(this.state.click); //update state\n\n      this.setState(prevState => _objectSpread({}, prevState, {\n        visible: !prevState.visible,\n        show: true,\n        barStyle: {\n          width: '212px',\n          position: 'absolute',\n          float: \"right\",\n          right: '24px',\n          top: '14px'\n        }\n      })); //change stylesheet\n\n      document.getElementById(this.state.id).classList = 'movie_clicked';\n    });\n\n    this.state = {\n      show: false,\n      sign: 'plus',\n      click: 0,\n      details: null,\n      id: this.props.data.id,\n      barStyle: {\n        width: \"326px\",\n        margin: '35px auto 47px'\n      },\n      visible: true\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.buttonChange = this.buttonChange.bind(this);\n    this.buttonChangeColor = this.buttonChangeColor.bind(this);\n  }\n\n  static async getInitialProps() {\n    // fetching movie poster\n    const poster = await fetch(this.props.data.posterurl).then(res => res.blob()).then(blob => URL.createObjectURL(blob)).catch(error => {\n      error;\n    });\n    return {\n      posterurl: poster\n    };\n  }\n\n  componentDidMount(props) {\n    // fetching details of the movie\n    var details = require(`../data/${this.props.data.id}.json`);\n\n    this.setState({\n      details: details\n    });\n  }\n\n  render() {\n    //        <Icon style={{position:'relative',right:'-32px',bottom:'-32px'}}  size='large' circular name={this.state.sign} inverted color='orange'/>\n    //tiny plus button changes color and affect addButton on click\n    const plusButton = this.state.show == true ? __jsx(Button, {\n      onClick: this.handleClick,\n      style: {\n        position: 'absolute',\n        zIndex: \"999\",\n        backgroundColor: this.state.click == 2 ? '#f24545' : '#ff6000',\n        borderRadius: '50%',\n        borderColor: 'none',\n        bottom: '-22px',\n        right: '-22px',\n        width: '44px',\n        height: '44px'\n      },\n      circular: true,\n      color: \"black\",\n      size: \"large\",\n      icon: this.state.sign\n    }) : null; //movie details\n\n    const movieDetails = this.state.show == true ? __jsx(\"div\", {\n      className: \"content_movie\"\n    }, __jsx(\"div\", {\n      id: this.props.data.id + '_content',\n      className: \"content_movie_storyline\"\n    }, \" \", this.state.details.storyline, \" \"), __jsx(\"hr\", {\n      className: \"content_movie_shapeline\"\n    }), __jsx(\"div\", {\n      className: \"content_movie_summary\"\n    }, __jsx(\"div\", {\n      className: \"content_movie_summary_definition\"\n    }, this.state.details.directors.length < 3 ? __jsx(\"p\", null, \" \", __jsx(\"span\", {\n      className: \"content_movie_summary_header\"\n    }, \" Director: \"), \" \", this.state.details.directors.slice(0, 3).join(', '), \" \") : __jsx(\"p\", null, \" \", __jsx(\"span\", {\n      className: \"content_movie_summary_header\"\n    }, \" Director: \"), \" \", this.state.details.directors.slice(0, 2).join(', '), \" \", __jsx(\"span\", null, \" \", this.state.details.directors.length - 2, \" | more credits >>  \")), this.state.details.writers.length < 3 ? __jsx(\"p\", null, \" \", __jsx(\"span\", {\n      style: {\n        marginRight: '2px'\n      },\n      className: \"content_movie_summary_header\"\n    }, \" Writers: \"), \" \", this.state.details.writers.slice(0, 3).join(', '), \" \") : __jsx(\"p\", null, \" \", __jsx(\"span\", {\n      className: \"content_movie_summary_header\"\n    }, \" Writers: \"), \" \", this.state.details.writers.slice(0, 2).join(', '), \" \", __jsx(\"span\", null, \" \", this.state.details.writers.length - 2, \" | more credits >>  \")), this.state.details.actors.length <= 3 ? __jsx(\"p\", null, \" \", __jsx(\"span\", {\n      style: {\n        marginRight: '18px'\n      },\n      className: \"content_movie_summary_header\"\n    }, \" Stars: \"), \" \", this.state.details.actors.slice(0, 3).join(', '), \" \") : __jsx(\"p\", null, \" \", __jsx(\"span\", {\n      className: \"content_movie_summary_header\"\n    }, \" Stars: \"), \" \", this.state.details.actors.slice(0, 3).join(', '), \" \", __jsx(\"span\", null, \" | See full cast & crew >>  \"))))) : null;\n    return __jsx(\"div\", {\n      id: this.props.data.id,\n      className: \"movie\"\n    }, __jsx(\"div\", {\n      className: \"img_container\",\n      id: this.props.data.id + \"_img\"\n    }, __jsx(\"img\", {\n      className: \"img_poster\",\n      alt: this.props.data.originalTitle + ' Poster',\n      src: this.props.data.posterurl\n    }), plusButton, __jsx(\"div\", {\n      className: \"gradient\"\n    }), __jsx(\"div\", {\n      className: \"gradient_white\"\n    })), __jsx(\"div\", {\n      className: \"bg_content\"\n    }, __jsx(\"div\", {\n      className: \"name_movie\"\n    }, this.props.data.originalTitle), __jsx(\"div\", {\n      className: \"info_movie\"\n    }, this.props.data.year, \" \\xB7 \", this.props.data.genres.join(', '), \" \\xB7 \", __jsx(Duration, {\n      min: this.props.data.duration\n    }), \"  \"), __jsx(\"div\", {\n      className: \"rating\"\n    }, `${this.props.data.imdbRating}`.length == 1 ? this.props.data.imdbRating + '.0' : this.props.data.imdbRating, __jsx(\"span\", {\n      className: \"text-style-1\"\n    }, \"/10\")), __jsx(Rate, {\n      id: this.props.data.id + \"_rate\",\n      percent: this.props.data.imdbRating * 10,\n      barStyle: this.state.barStyle\n    }), __jsx(Transition, {\n      visible: this.state.show,\n      animation: 'fade',\n      duration: 850\n    }, movieDetails), __jsx(Transition, {\n      animation: 'bounce',\n      duration: 200,\n      visible: this.state.visible\n    }, __jsx(\"button\", {\n      style: this.state.click == 2 ? {\n        backgroundColor: '#f24545'\n      } : {\n        backgroundColor: '#ff6000'\n      },\n      className: \"bg_button\",\n      onClick: this.handleClick\n    }, __jsx(\"p\", {\n      id: this.props.data.id + \"_button\",\n      className: \"text_button\"\n    }, \" MOVIE DETAILS \")))));\n  }\n\n}\n\nexport default Movie;","map":null,"metadata":{},"sourceType":"module"}