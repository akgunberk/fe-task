{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/akgunberk/Desktop/DEV/armut/pages/movie.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport 'isomorphic-fetch';\n\nvar Movie =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Movie, _Component);\n\n  function Movie(props) {\n    var _this;\n\n    _classCallCheck(this, Movie);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Movie).call(this, props));\n    _this.state = {\n      show: true\n    };\n    return _this;\n  }\n\n  _createClass(Movie, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        className: \"movie\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"img_container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, __jsx(\"img\", {\n        className: \"img_poster\",\n        alt: this.props.data.originalTitle + ' Poster',\n        src: this.props.data.posterurl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      })), __jsx(\"div\", {\n        className: \"name_movie\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, this.props.data.originalTitle), __jsx(\"div\", {\n        className: \"info_movie\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, this.props.data.year, \" \\xB7 \", this.props.data.genres.map(function (e) {\n        return __jsx(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, e, \",\");\n      })), __jsx(\"div\", {\n        className: \"rating\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, this.props.data.rating));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps() {\n      var poster;\n      return _regeneratorRuntime.async(function getInitialProps$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetch(this.props.data.posterurl).then(function (res) {\n                return res.blob();\n              }).then(function (blob) {\n                return URL.createObjectURL(blob);\n              })[\"catch\"](function (error) {\n                error;\n              }));\n\n            case 2:\n              poster = _context.sent;\n              return _context.abrupt(\"return\", {\n                posterurl: poster\n              });\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this);\n    }\n  }]);\n\n  return Movie;\n}(Component);\n\nexport default Movie;","map":{"version":3,"sources":["/Users/akgunberk/Desktop/DEV/armut/pages/movie.js"],"names":["React","Component","Movie","props","state","show","data","originalTitle","posterurl","year","genres","map","e","rating","fetch","then","res","blob","URL","createObjectURL","error","poster"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,kBAAP;;IAEMC,K;;;;;AACF,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,+EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAC;AADI,KAAb;AAFe;AAKlB;;;;6BAeQ;AAGL,aACI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAA4B,QAAA,GAAG,EAAE,KAAKF,KAAL,CAAWG,IAAX,CAAgBC,aAAhB,GAAgC,SAAjE;AAA4E,QAAA,GAAG,EAAE,KAAKJ,KAAL,CAAWG,IAAX,CAAgBE,SAAjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,EAII;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA6B,KAAKL,KAAL,CAAWG,IAAX,CAAgBC,aAA7C,CAJJ,EAKJ;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA6B,KAAKJ,KAAL,CAAWG,IAAX,CAAgBG,IAA7C,YAAsD,KAAKN,KAAL,CAAWG,IAAX,CAAgBI,MAAhB,CAAuBC,GAAvB,CAA2B,UAAAC,CAAC;AAAA,eAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAOA,CAAP,MAAJ;AAAA,OAA5B,CAAtD,CALI,EAMI;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAyB,KAAKT,KAAL,CAAWG,IAAX,CAAgBO,MAAzC,CANJ,CADJ;AAUH;;;;;;;;;;+CAvBwBC,KAAK,CAAC,KAAKX,KAAL,CAAWG,IAAX,CAAgBE,SAAjB,CAAL,CAAiCO,IAAjC,CACjB,UAAAC,GAAG;AAAA,uBAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,eADc,EAEfF,IAFe,CAGjB,UAAAE,IAAI;AAAA,uBAAIC,GAAG,CAACC,eAAJ,CAAoBF,IAApB,CAAJ;AAAA,eAHa,WAGwB,UAAAG,KAAK,EAAG;AAACA,gBAAAA,KAAK;AAAC,eAHvC,C;;;AAAfC,cAAAA,M;+CAKC;AAACb,gBAAAA,SAAS,EAACa;AAAX,e;;;;;;;;;;;;EAhBKpB,S;;AAqCpB,eAAeC,KAAf","sourcesContent":["import React, {Component} from 'react';\nimport 'isomorphic-fetch';\n\nclass Movie extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n            show:true,\n         }\n    }\n\n    static async getInitialProps(){\n       // fetching movie poster\n\n        const poster = await fetch(this.props.data.posterurl).then(\n            res => res.blob()\n            ).then(\n            blob => URL.createObjectURL(blob)).catch(error =>{error} )\n        \n        return {posterurl:poster}   \n    }\n\n    \n\n    render() { \n    \n\n        return (\n            <div className='movie'>\n                <div className='img_container'>\n                    <img className='img_poster' alt={this.props.data.originalTitle + ' Poster'} src={this.props.data.posterurl} />\n                </div>\n                <div className='name_movie'>{this.props.data.originalTitle}</div>\n        <div className='info_movie'>{this.props.data.year} Â· {this.props.data.genres.map(e => <span>{e},</span>)}</div>\n                <div className='rating'>{this.props.data.rating}</div>\n            </div>\n        )\n    }\n}\n \nexport default Movie;"]},"metadata":{},"sourceType":"module"}