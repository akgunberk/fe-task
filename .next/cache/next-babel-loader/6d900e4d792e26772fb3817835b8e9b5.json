{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/akgunberk/Desktop/DEV/armut/pages/movie.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport 'isomorphic-fetch';\n\nvar Movie =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Movie, _Component);\n\n  function Movie(props) {\n    var _this;\n\n    _classCallCheck(this, Movie);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Movie).call(this, props));\n    _this.state = {\n      show: true,\n      resim: null\n    };\n    return _this;\n  }\n\n  _createClass(Movie, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var poster;\n      return _regeneratorRuntime.async(function componentDidMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetch('https://images-na.ssl-images-amazon.com/images/M/MV5BMTMxNTMwODM0NF5BMl5BanBnXkFtZTcwODAyMTk2Mw@@._V1_SY500_CR0,0,337,500_AL_.jpg').then(function (res) {\n                return res.blob();\n              }).then(function (xx) {\n                return URL.createObjectURL(xx);\n              }));\n\n            case 2:\n              poster = _context.sent;\n              this.setState({\n                resim: poster\n              });\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // async function loadImage(url) {\n      //     const poster = await fetch(url).then(res => res.blob())\n      //     //return <img src={poster.blob}></img>\n      // }\n      //loadImage('https://images-na.ssl-images-amazon.com/images/M/MV5BMTMxNTMwODM0NF5BMl5BanBnXkFtZTcwODAyMTk2Mw@@._V1_SY500_CR0,0,337,500_AL_.jpg')\n      return __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"Berk\", __jsx(\"img\", {\n        id: this.props.id,\n        src: this.state.resim,\n        style: {\n          width: '326px',\n          height: '483px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Movie;\n}(Component);\n\nexport default Movie;","map":{"version":3,"sources":["/Users/akgunberk/Desktop/DEV/armut/pages/movie.js"],"names":["React","Component","Movie","props","state","show","resim","fetch","then","res","blob","xx","URL","createObjectURL","poster","setState","id","width","height"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,kBAAP;;IAEMC,K;;;;;AACF,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,+EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAC,IADI;AAETC,MAAAA,KAAK,EAAC;AAFG,KAAb;AAFe;AAMlB;;;;;;;;;;;+CAIwBC,KAAK,CAAC,mIAAD,CAAL,CAA2IC,IAA3I,CAAgJ,UAAAC,GAAG;AAAA,uBAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,eAAnJ,EAAmKF,IAAnK,CACjB,UAAAG,EAAE;AAAA,uBAAIC,GAAG,CAACC,eAAJ,CAAoBF,EAApB,CAAJ;AAAA,eADe,C;;;AAAfG,cAAAA,M;AAIN,mBAAKC,QAAL,CAAc;AAACT,gBAAAA,KAAK,EAACQ;AAAP,eAAd;;;;;;;;;;;6BAKK;AAEL;AACA;AACA;AAEA;AAGA;AAEA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAEI;AAAK,QAAA,EAAE,EAAE,KAAKX,KAAL,CAAWa,EAApB;AAAwB,QAAA,GAAG,EAAE,KAAKZ,KAAL,CAAWE,KAAxC;AAA+C,QAAA,KAAK,EAAE;AAACW,UAAAA,KAAK,EAAC,OAAP;AAAeC,UAAAA,MAAM,EAAC;AAAtB,SAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ;AAMH;;;;EArCejB,S;;AAwCpB,eAAeC,KAAf","sourcesContent":["import React, {Component} from 'react';\nimport 'isomorphic-fetch';\n\nclass Movie extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n            show:true,\n            resim:null\n         }\n    }\n\n    async componentDidMount(){\n\n        const poster = await fetch('https://images-na.ssl-images-amazon.com/images/M/MV5BMTMxNTMwODM0NF5BMl5BanBnXkFtZTcwODAyMTk2Mw@@._V1_SY500_CR0,0,337,500_AL_.jpg').then(res => res.blob()).then(\n            xx => URL.createObjectURL(xx)\n        )\n        \n        this.setState({resim:poster})        \n    }\n\n    \n\n    render() { \n\n        // async function loadImage(url) {\n        //     const poster = await fetch(url).then(res => res.blob())\n        //     //return <img src={poster.blob}></img>\n            \n        // }\n        \n        \n        //loadImage('https://images-na.ssl-images-amazon.com/images/M/MV5BMTMxNTMwODM0NF5BMl5BanBnXkFtZTcwODAyMTk2Mw@@._V1_SY500_CR0,0,337,500_AL_.jpg')\n\n        return (\n            <div>\n                Berk\n                <img id={this.props.id} src={this.state.resim} style={{width:'326px',height:'483px'}} />\n            </div>\n        )\n    }\n}\n \nexport default Movie;"]},"metadata":{},"sourceType":"module"}